spring:
  application:
    name: oneday-auth
  redis:
    database: 2
    host: 172.29.1.168
    port: 6379
    jedis:
      pool:
        max-active: 1024
        max-idle: 200
        min-idle: 10
        max-wait: 1500ms
  jpa:
    show-sql: true
    database: mysql
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
    hibernate:
      ddl-auto: update
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/greenadoption?relaxAutoCommit=true&useUnicode=true&characterEncoding=UTF-8&characterSetResults=UTF-8&zeroDateTimeBehavior=convertToNull&autoReconnect=true&failOverReadOnly=false&useSSL=false
    username: root
    password:
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      ## 初始化大小，最小，最大
      initial-size: 30
      #最大连接池数量
      max-active: 400
      min-idle: 10

      ## 配置获取连接等待超时的时间
      max-wait: 60000

      ## 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000

      ## 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000

      ## 链接检测
      validation-query: SELECT 1

      #申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      test-while-idle: true

      #申请连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
      test-on-borrow: false

      #归还连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
      test-on-return: false

      ## 打开PSCache，并且指定每个连接上PSCache的大小
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 300

      ## 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: config,stat,wall


server:
  port: 8080
  tomcat:
    uri-encoding: UTF-8
    accept-count: 300
    max-threads: 1300
    max-connections: 1000
    min-spare-threads: 20
  compression:
    enabled: true
